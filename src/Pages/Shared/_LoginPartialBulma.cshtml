@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
<div id="navbarContent" class="navbar-menu">
    <div class="navbar-start">
        <a class="navbar-item" asp-area="" asp-page="/Activities">Activities</a>
        @if (SignInManager.IsSignedIn(User))
        {
            @if (User.IsInRole("Admin") || User.IsInRole("Editor"))
            {
                <a class="navbar-item" asp-area="Admin" asp-page="/Index">Site Admin</a>
            }
            else
            {
                <a class="navbar-item" asp-area="" asp-page="/Dashboard">Team Dashboard</a>
            }
        }
    </div>
    <div class="navbar-end">
        <div class="navbar-item">
            <div class="buttons">
                @if (SignInManager.IsSignedIn(User))
                {
                     <a class="button is-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Edit Profile</a>                    
                    <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                        <button type="submit" class="button is-danger">Logout</button>
                    </form>
                }
                else
                {
                    <a class="button is-light" asp-area="Identity" asp-page="/Account/Login">Log in</a>
                    <a class="button is-primary" asp-area="Identity" asp-page="/Account/Register"><strong>Create Account</strong></a>
                }
            </div>
        </div>
    </div>
</div>